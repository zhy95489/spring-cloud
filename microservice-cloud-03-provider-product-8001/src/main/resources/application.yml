server:
  port: 8001


spring:
  application:
    name: microservice-product #这个很重要，这在以后的服务与服务之间相互调用一般都是根据这个
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource # 当前数据源操作类型
    driver-class-name: com.mysql.cj.jdbc.Driver # mysql驱动包
    url: jdbc:mysql://localhost:3306/springcloud_db01?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=UTF-8 # 数据库名称
#    url: jdbc:mysql://192.168.31.242:3306/springcloud_db01?serverTimezone=GMT%2B8 # 数据库名称
    username: root
    password: root
#    driver-class-name: com.mysql.cj.jdbc.Driver # mysql驱动包
#    url: jdbc:oracle:thin:@192.168.31.242:1521:helowin # 数据库名称
#    username: zhy
#    password: zhy
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,slf4j
          # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    dbcp2:
      min-idle: 5 # 数据库连接池的最小维持连接数
      initial-size: 5 # 初始化连接数
      max-total: 5 # 最大连接数
      max-wait-millis: 150 # 等待连接获取的最大超时时间

mybatis:
  #开启驼峰命名法
  configuration:
    map-underscore-to-camel-case: true
mybatis-plus:
  # xml地址
  mapper-locations: classpath:mapper/*Mapper.xml
  # 实体扫描，多个package用逗号或者分号分隔
  #type-aliases-package: ***   #自己的实体类地址
  configuration:
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

swagger:
  base-package: com.laozhu

eureka:
  client:
    register-with-eureka: true #服务注册开关
    fetch-registry: true
    service-url:
      defaultZone: http://eureka6001.com:6001/eureka/,http://eureka6001.com:6002/eureka/
  instance:
    instance-id: ${spring.application.name}:${server.port}
    prefer-ip-address: true
    ##心跳检测与续约时间，设置小点保证关闭后注册中心额能及时踢出服务
    ##eureka客户端向服务端发送心跳的时间间隔，单位为秒（客户端告诉服务端自己会按照该规则）
    lease-renewal-interval-in-seconds: 1
    ##eureka服务端再收到最后一次心跳之后等待的时间上限，单位为秒，超过剔除（客户端告诉服务端按照此规则）
    lease-expiration-duration-in-seconds: 2